{"version":3,"sources":["webpack:///./src/components/section-about/index.jsx","webpack:///./src/components/section-blog/index.jsx","webpack:///./src/components/section-experience/index.jsx","webpack:///./src/components/section-education/index.jsx","webpack:///./src/components/section-projects/index.jsx","webpack:///./src/components/section-skills/index.jsx","webpack:///./src/pages/index.jsx","webpack:///./src/components/section/index.jsx","webpack:///./src/components/summary-item/index.jsx"],"names":["SectionAbout","about","title","className","split","map","line","index","array","length","key","SectionBlog","posts","post","node","fields","slug","name","frontmatter","description","link","img","internal","to","SectionExperience","experience","item","SectionEducation","education","SectionProjects","projects","project","SectionSkills","skills","skill","Index","data","get","allMarkdownRemark","edges","noBlog","metadata","site","siteMetadata","classes","Section","children","SummaryItem","linkContent","imageContent","href","src","alt"],"mappings":"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","file":"component---src-pages-index-jsx-4f273afe4b32944ce458.js","sourcesContent":["import React from 'react';\n\nimport Section from '../section';\n\nconst SectionAbout = ({ about }) => {\n  return (\n    <Section title=\"About Me\">\n      <div className=\"mb-6\">\n        {about.split('\\n').map((line, index, array) => ((index + 1) === array.length ? <p key={index}>\n          {line}\n        </p> \n          : <><p>\n          {line}\n        </p> \n        <br></br>\n          </>\n        ))}\n      </div>\n    </Section>\n  );\n};\n\nexport default SectionAbout;\n","import { Link } from 'gatsby';\nimport React from 'react';\n\nimport Section from '../section';\nimport SummaryItem from '../summary-item';\n\nconst SectionBlog = ({ posts }) => {\n  return (\n    <Section title=\"Latest Posts\">\n      {posts.map((post) => (\n        <SummaryItem\n          key={post.node.fields.slug}\n          name={post.node.frontmatter.title}\n          description={post.node.frontmatter.description}\n          link={post.node.fields.slug}\n          img={post.img}\n          internal\n        />\n      ))}\n      {posts.length >= 5 && (\n        <Link className=\"text-gray-500 text-sm hover:text-black\" to=\"/blog\">\n          View all posts &rarr;\n        </Link>\n      )}\n    </Section>\n  );\n};\n\nexport default SectionBlog;\n","import React from 'react';\n\nimport Section from '../section';\nimport SummaryItem from '../summary-item';\n\nconst SectionExperience = ({ experience }) => {\n  if (!experience.length) return null;\n  return (\n    <Section title=\"Experience\">\n      {experience.map((item) => (\n        <SummaryItem\n          key={item.name}\n          name={item.name}\n          description={item.description}\n          link={item.link}\n          img={item.img}\n        />\n      ))}\n    </Section>\n  );\n};\n\nexport default SectionExperience;\n","import React from 'react';\n\nimport Section from '../section';\nimport SummaryItem from '../summary-item';\n\nconst SectionEducation = ({ education }) => {\n  if (!education.length) return null;\n  return (\n    <Section title=\"Education\">\n      {education.map((item) => (\n        <SummaryItem\n          key={item.name}\n          name={item.name}\n          description={item.description}\n          link={item.link}\n          img={item.img}\n        />\n      ))}\n    </Section>\n  );\n};\n\nexport default SectionEducation;\n","import React from 'react';\n\nimport Section from '../section';\nimport SummaryItem from '../summary-item';\n\nconst SectionProjects = ({ projects }) => {\n  if (!projects.length) return null;\n\n  return (\n    <Section title=\"Projects\">\n      {projects.map((project) => (\n        <SummaryItem\n          key={project.name}\n          name={project.name}\n          description={project.description}\n          link={project.link}\n          img={project.img}\n        />\n      ))}\n    </Section>\n  );\n};\n\nexport default SectionProjects;\n","import React from 'react';\n\nimport Section from '../section';\nimport SummaryItem from '../summary-item';\n\nconst SectionSkills = ({ skills }) => {\n  return (\n    <Section title=\"Skills\">\n      {skills.map((skill) => (\n        <SummaryItem\n          key={skill.name}\n          name={skill.name}\n          description={skill.description}\n          img={skill.img}\n        />\n      ))}\n    </Section>\n  );\n};\n\nexport default SectionSkills;\n","import { graphql } from 'gatsby';\nimport get from 'lodash/get';\nimport React from 'react';\n\nimport Header from '../components/header';\nimport Layout from '../components/layout';\nimport SectionAbout from '../components/section-about';\nimport SectionBlog from '../components/section-blog';\nimport SectionExperience from '../components/section-experience';\nimport SectionEducation from '../components/section-education';\nimport SectionProjects from '../components/section-projects';\nimport SectionSkills from '../components/section-skills';\nimport SEO from '../components/seo';\n\nconst Index = ({ data }) => {\n  const about = get(data, 'site.siteMetadata.about', false);\n  const projects = get(data, 'site.siteMetadata.projects', false);\n  const posts = data.allMarkdownRemark.edges;\n  const experience = get(data, 'site.siteMetadata.experience', false);\n  const education = get(data, 'site.siteMetadata.education', false);\n  const skills = get(data, 'site.siteMetadata.skills', false);\n  const noBlog = !posts || !posts.length;\n  return (\n    <Layout>\n      <SEO />\n      <Header metadata={data.site.siteMetadata} noBlog={noBlog} />\n      {about && <SectionAbout about={about} />}\n      {experience && experience.length && (\n        <SectionExperience experience={experience} />\n      )}\n      {education && education.length && (\n        <SectionEducation education={education} />\n      )}\n      {projects && projects.length && <SectionProjects projects={projects} />}\n      {skills && skills.length && <SectionSkills skills={skills} />}\n      {!noBlog && <SectionBlog posts={posts} />}\n    </Layout>\n  );\n};\n\nexport default Index;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        name\n        title\n        description\n        about\n        author\n        email\n        github\n        linkedin\n        resume\n        projects {\n          name\n          description\n          link\n        }\n        experience {\n          name\n          description\n          link\n          img\n        }\n        skills {\n          name\n          description\n        }\n        education {\n          name\n          description\n          link\n          img\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 5\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\n\nconst classes = {\n  wrapper: 'block pt-12 md:flex',\n  title: 'pb-6 md:w-full md:max-w-150 md:p-0',\n  heading:\n    'font-xs font-light tracking-widest text-sm text-gray-600 leading-normal uppercase',\n  content: 'flex-none text-lg text-gray-600 font-light md:flex-1 md:pl-20',\n};\n\nconst Section = ({ title, children }) => {\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.title}>\n        <h2 className={classes.heading}>{title}</h2>\n      </div>\n      <div className={classes.content}>{children}</div>\n    </div>\n  );\n};\n\nexport default Section;\n","import { Link } from 'gatsby';\nimport React from 'react';\n\nconst classes = {\n  container: 'flex flex-row',\n  wrapper: 'mb-6',\n  name: 'font-semibold text-gray-900 pb-1',\n  description: 'text-md text-gray-600 font-light',\n  imgWrapper: \"w-max items-center overflow-hidden\",\n  img: \"w-0 md:w-10 rounded-full md:my-1 md:mr-3 md:p-1 md:self-center \"\n};\n\nconst SummaryItem = ({ name, description, link = false, img = false, internal = false }) => {\n\n  // 1. check nature of link\n  let linkContent;\n  if (internal) {\n    linkContent = <Link to={link}>{name}</Link>;\n  } else {\n    linkContent = <a href={link}>{name}</a>;\n  }\n\n  // 2. check if there is an image\n  let imageContent;\n  if (img) {\n    imageContent = <img src={img} alt={name} className={classes.img}/>\n  }\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.imgWrapper}>{imageContent}</div>\n      <div className={classes.wrapper}>\n        \n        <h3\n          className={`${classes.name} ${\n            link ? 'hover:underline hover:text-black' : ''\n          }`}\n        >\n          {link ? linkContent : name}\n        </h3>\n        {description.split('\\n').map((line, index, array) => ( (index + 1) === array.length ?\n          <p className={classes.description}>\n            {line}\n          </p> : <>\n          <p className={classes.description}>\n            {line}\n          </p>\n          <br></br>\n        </>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SummaryItem;\n"],"sourceRoot":""}