{"version":3,"sources":["webpack:///./src/components/section/index.jsx","webpack:///./src/components/summary-item/index.jsx","webpack:///./src/pages/404.jsx","webpack:///./src/components/blog-posts/index.jsx","webpack:///./src/pages/blog.jsx"],"names":["classes","Section","_ref","title","children","React","createElement","className","SummaryItem","linkContent","imageContent","name","description","link","img","internal","Link","to","href","src","alt","split","map","line","index","array","length","Fragment","NotFoundPage","Layout","SEO","BlogPosts","posts","post","key","node","fields","slug","frontmatter","Index","data","allMarkdownRemark","edges","noBlog","Header","metadata","site","siteMetadata","NotFound"],"mappings":"6FAAA,yBAEA,MAAMA,EACK,sBADLA,EAEG,qCAFHA,EAIF,oFAJEA,EAKK,gEAcIC,IAXCC,IAA0B,IAAzB,MAAEC,EAAK,SAAEC,GAAUF,EAClC,OACEG,IAAAC,cAAA,OAAKC,UAAWP,GACdK,IAAAC,cAAA,OAAKC,UAAWP,GACdK,IAAAC,cAAA,MAAIC,UAAWP,GAAkBG,IAEnCE,IAAAC,cAAA,OAAKC,UAAWP,GAAkBI,M,kCChBxC,qCAGA,MAAMJ,EACO,gBADPA,EAEK,OAFLA,EAGE,mCAHFA,EAIS,mCAJTA,EAKQ,qCALRA,EAMC,kEA8CQQ,IA3CKN,IAAyE,IAGvFO,EAQAC,GAXe,KAAEC,EAAI,YAAEC,EAAW,KAAEC,GAAO,EAAK,IAAEC,GAAM,EAAK,SAAEC,GAAW,GAAOb,EAgBrF,OAXEO,EADEM,EACYV,IAAAC,cAACU,OAAI,CAACC,GAAIJ,GAAOF,GAEjBN,IAAAC,cAAA,KAAGY,KAAML,GAAOF,GAK5BG,IACFJ,EAAeL,IAAAC,cAAA,OAAKa,IAAKL,EAAKM,IAAKT,EAAMJ,UAAWP,KAIpDK,IAAAC,cAAA,OAAKC,UAAWP,GACdK,IAAAC,cAAA,OAAKC,UAAWP,GAAqBU,GACrCL,IAAAC,cAAA,OAAKC,UAAWP,GAEdK,IAAAC,cAAA,MACEC,UAAW,GAAGP,KACZa,EAAO,mCAAqC,MAG7CA,EAAOJ,EAAcE,GAEvBC,EAAYS,MAAM,MAAMC,IAAI,CAACC,EAAMC,EAAOC,IAAaD,EAAQ,IAAOC,EAAMC,OAC3ErB,IAAAC,cAAA,KAAGC,UAAWP,GACXuB,GACIlB,IAAAC,cAAAD,IAAAsB,SAAA,KACPtB,IAAAC,cAAA,KAAGC,UAAWP,GACXuB,GAEHlB,IAAAC,cAAA,iB,kCC/CV,oEAMA,MAAMN,EACG,oBADHA,EAEE,YAiBO4B,UAdMA,IACnBvB,IAAAC,cAACuB,IAAM,KACLxB,IAAAC,cAACwB,IAAG,CAAC3B,MAAM,cACXE,IAAAC,cAAA,MAAIC,UAAWP,GAAe,kBAC9BK,IAAAC,cAAA,SAAG,2CACwC,IACzCD,IAAAC,cAACU,OAAI,CAACT,UAAWP,EAAciB,GAAG,KAAI,oBAE/B,O,4FCEEc,MAhBG7B,IAAgB,IAAf,MAAE8B,GAAO9B,EAC1B,OACEG,IAAAC,cAACL,IAAO,CAACE,MAAM,kBACZ6B,EAAMV,IAAKW,GACV5B,IAAAC,cAACE,IAAW,CACV0B,IAAKD,EAAKE,KAAKC,OAAOC,KACtB1B,KAAMsB,EAAKE,KAAKG,YAAYnC,MAC5BS,YAAaqB,EAAKE,KAAKG,YAAY1B,YACnCC,KAAMoB,EAAKE,KAAKC,OAAOC,KACvBtB,UAAQ,O,gDCYHwB,UAjBDrC,IAAe,IAAd,KAAEsC,GAAMtC,EACrB,MAAM8B,EAAQQ,EAAKC,kBAAkBC,MAC/BC,GAAUX,IAAUA,EAAMN,OAEhC,OAAKM,GAAUA,EAAMN,OAKnBrB,IAAAC,cAACuB,IAAM,KACLxB,IAAAC,cAACwB,IAAG,CAAC3B,MAAM,SACXE,IAAAC,cAACsC,IAAM,CAACC,SAAUL,EAAKM,KAAKC,gBAC1BJ,GAAUtC,IAAAC,cAACyB,EAAS,CAACC,MAAOA,KAPzB3B,IAAAC,cAAC0C,UAAQ","file":"component---src-pages-blog-jsx-37130297b2deca599ffe.js","sourcesContent":["import React from 'react';\n\nconst classes = {\n  wrapper: 'block pt-12 md:flex',\n  title: 'pb-6 md:w-full md:max-w-150 md:p-0',\n  heading:\n    'font-xs font-light tracking-widest text-sm text-gray-600 leading-normal uppercase',\n  content: 'flex-none text-lg text-gray-600 font-light md:flex-1 md:pl-20',\n};\n\nconst Section = ({ title, children }) => {\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.title}>\n        <h2 className={classes.heading}>{title}</h2>\n      </div>\n      <div className={classes.content}>{children}</div>\n    </div>\n  );\n};\n\nexport default Section;\n","import { Link } from 'gatsby';\nimport React from 'react';\n\nconst classes = {\n  container: 'flex flex-row',\n  wrapper: 'mb-6',\n  name: 'font-semibold text-gray-900 pb-1',\n  description: 'text-md text-gray-600 font-light',\n  imgWrapper: \"w-max items-center overflow-hidden\",\n  img: \"w-0 md:w-10 rounded-full md:my-1 md:mr-3 md:p-1 md:self-center \"\n};\n\nconst SummaryItem = ({ name, description, link = false, img = false, internal = false }) => {\n\n  // 1. check nature of link\n  let linkContent;\n  if (internal) {\n    linkContent = <Link to={link}>{name}</Link>;\n  } else {\n    linkContent = <a href={link}>{name}</a>;\n  }\n\n  // 2. check if there is an image\n  let imageContent;\n  if (img) {\n    imageContent = <img src={img} alt={name} className={classes.img}/>\n  }\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.imgWrapper}>{imageContent}</div>\n      <div className={classes.wrapper}>\n        \n        <h3\n          className={`${classes.name} ${\n            link ? 'hover:underline hover:text-black' : ''\n          }`}\n        >\n          {link ? linkContent : name}\n        </h3>\n        {description.split('\\n').map((line, index, array) => ( (index + 1) === array.length ?\n          <p className={classes.description}>\n            {line}\n          </p> : <>\n          <p className={classes.description}>\n            {line}\n          </p>\n          <br></br>\n        </>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SummaryItem;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst classes = {\n  title: 'text-lg font-bold',\n  link: 'underline',\n};\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"Not found\" />\n    <h1 className={classes.title}>404: Not Found</h1>\n    <p>\n      You just hit a route that doesn't exist.{' '}\n      <Link className={classes.link} to=\"/\">\n        Return to safety\n      </Link>\n      .\n    </p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\n\nimport Section from '../section';\nimport SummaryItem from '../summary-item';\n\nconst BlogPosts = ({ posts }) => {\n  return (\n    <Section title=\"All Blog Posts\">\n      {posts.map((post) => (\n        <SummaryItem\n          key={post.node.fields.slug}\n          name={post.node.frontmatter.title}\n          description={post.node.frontmatter.description}\n          link={post.node.fields.slug}\n          internal\n        />\n      ))}\n    </Section>\n  );\n};\n\nexport default BlogPosts;\n","import { graphql } from 'gatsby';\nimport React from 'react';\n\nimport BlogPosts from '../components/blog-posts';\nimport Header from '../components/header';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport NotFound from '../pages/404';\n\nconst Index = ({ data }) => {\n  const posts = data.allMarkdownRemark.edges;\n  const noBlog = !posts || !posts.length;\n\n  if (!posts || !posts.length) {\n    return <NotFound />;\n  }\n\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Header metadata={data.site.siteMetadata} />\n      {!noBlog && <BlogPosts posts={posts} />}\n    </Layout>\n  );\n};\n\nexport default Index;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        name\n        title\n        description\n        about\n        author\n        email\n        github\n        linkedin\n        resume\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}